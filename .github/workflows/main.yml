name: docker build

# 1. Controls when the workflow will run
on:
  push:
    branches:
      - 'main'
      - 'dev'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'
      - 'dev'

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      IMAGE_NAME: sample-app
    steps:
    # 2. setup variables
    - name: Define variables
      uses: FranzDiebold/github-env-vars-action@v2
    - name: echo Repository tags
      run: echo "$CI_REF_NAME"
    - name: Get current date
      id: date
      run: echo "today=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

    # 3. Checkout code
    - name: Checkout
      uses: actions/checkout@v3

    # 4. Login DockerHub
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # 5. setup buildx
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 6. Build and Push
    - name: env
      run: env | sort
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/arm64
        push: true
        # 7. nameing
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/${{ github.event.repository.name }}:latest
          ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/${{ github.event.repository.name }}:${{ steps.date.outputs.today }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        outputs: type=docker,dest=/tmp/${{ github.event.repository.name }}.tar
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.repository.name }}
        path: /tmp/${{ github.event.repository.name }}.tar

  use:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.repository.name }}
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/${{ github.event.repository.name }}.tar
          docker image ls -a
